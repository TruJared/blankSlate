---
import type { AstroBuiltinAttributes } from 'astro';
import { Icon } from 'astro-icon/components';

export interface Props {
	title: string;
	description: string;
	alt?: boolean;
	iconSrc?: string;
	shadowSize?: "sm" | "md" | "lg" | "none" | null;
	class?: string | AstroBuiltinAttributes['class:list'];}

const {
	title,
	description,
	alt = false,
	iconSrc = null,
	shadowSize = "sm",
	class: className,
} = Astro.props;

const options = {
	"rounded-theme": true,
	"bg-theme-primary border-theme-primary": !alt,
	"bg-theme-secondary border-theme-secondary": alt,
	"shadow-sm": shadowSize === "sm",
	"shadow-md": shadowSize === "md",
	"shadow-lg": shadowSize === "lg",
	"shadow-none": shadowSize === "none",
};
---

<div
	class:list={[
		"border-2 shadow-theme-primary p-4 w-full md:w-1/2 lg:w-1/4",
		options,
		className,
	]}
>
	<h2
		class:list={[
			"center",
			"uppercase",
			"font-bold",
			"mb-2",
			{ "text-theme-primary": !alt, "text-theme-secondary": alt },
		]}
	>

			{
		iconSrc && (
			<span class="flex logo-wrapper items-center p-4 bg-theme-accent">
				<span class="flex items-center border-2 border-theme-secondary rounded-full">
					<Icon name="ri:brush-2-line" size="16" class="absolute m-1" />
			class="absolute m-1" />
				</span>
			</span>
		)
	}


		{title}
	</h2>
	<hr
		class:list={[
			"border-1 mb-2",
			{ "border-theme-primary": !alt },
			{ "border-theme-secondary": alt },
		]}
	/>
	<p class:list={[{ "text-theme-primary": !alt, "text-theme-secondary": alt }]}>
		{description}
	</p>
</div>
