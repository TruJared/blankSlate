---
export interface Props {
	textToCopy: string;
	size?: number;
	customIcon?: JSX.Element;
	ariaLabel?: string;
	customClass?: string | Array<{ [key: string]: boolean | string }>;
}

const {
	textToCopy,
	customIcon,
	size = 12,
	ariaLabel = "Copy to clipboard",
	customClass,
} = Astro.props;
---

<button
	aria-label={ariaLabel}
	class:list={[
		"group inline-flex items-center p-1 opacity-60 text-theme-accent border border-theme-secondary rounded-md transition-colors duration-[1500ms] active:bg-theme-accent active:text-theme-secondary hover:opacity-100",
		customClass,
	]}
	data-text-to-copy={textToCopy}
>
	{
		customIcon ? (
			customIcon
		) : (
			<svg
				xmlns="http://www.w3.org/2000/svg"
				width={size}
				height={size}
				viewBox="0 0 24 24"
				fill="none"
				stroke="currentColor"
				stroke-width="2"
				stroke-linecap="round"
				stroke-linejoin="round"
				role="img"
				aria-label="Copy icon"
				class="feather feather-copy"
			>
				<rect x="9" y="9" width="13" height="13" rx="2" ry="2" />
				<path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1" />
			</svg>
		)
	}
	<span class="ml-1 text-xs font-semibold copied-text sr-only">Copied!</span>
</button>

<script>
	document.addEventListener("astro:page-load", () => {
		const copyButtons = document.querySelectorAll("button[data-text-to-copy]");
		copyButtons.forEach((button) => {
			if (!navigator.clipboard) {
				button.remove();
				return;
			}

			button.addEventListener("click", async () => {
				const textToCopy = button.getAttribute("data-text-to-copy") || "";
				try {
					await navigator.clipboard.writeText(textToCopy);
					button.classList.add("copied");
					const copiedText = button.querySelector(".copied-text");
					copiedText?.classList.remove("sr-only");
					setTimeout(() => {
						button.classList.remove("copied");
						copiedText?.classList.add("sr-only");
						// about 25% shorter than the time on the button
					}, 1000);
				} catch (err) {
					console.error("Failed to copy text: ", err);
				}
			});
		});
	});
</script>

<style>
	button.copied {
		@apply text-theme-secondary;
	}
</style>
