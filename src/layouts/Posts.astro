---
import type { CollectionEntry } from "astro:content";
import type { CollectionNames } from "@content/collections";

import { COLLECTION_NAMES } from "@content/collections";
import { SITE } from "@config";

import { Icon } from "astro-icon/components";

import Pagination from "@components/Astro/Pagination.astro";
import Layout from "@layouts/Layout.astro";
import Tag from "@components/Astro/Tag.astro";

export interface Props {
	posts: any; // TODO: type
	page?: any; // TODO: type
	collectionName: CollectionNames | string | undefined;
	title?: string | undefined;
	description?: string;
	customClass?: string | Array<{ [key: string]: boolean | string }>;

	filter?: (entry: CollectionEntry<CollectionNames>) => boolean;
	includeDrafts?: boolean;
	subtitle?: string;
}

const {
	posts,
	page,
	collectionName = COLLECTION_NAMES[0],
	title,
	subtitle,
	description = title,
	customClass,
} = Astro.props;
---

<Layout title={title} description={description} customClass={customClass}>
	<section>
		<div>
			{
				subtitle && (
					<p class="h6 text-4xl text-center mb-12 capitalize">{subtitle}</p>
				)
			}
		</div>
		{
			posts?.map((post: any) => (
				<div class="mb-12">
					{}{" "}
					<a
						href={`/${post.collection || collectionName}/${post.slug}`}
						class="no-underline"
					>
						<h2 class="mb-6">{post.data.title}</h2>
					</a>
					<div class="flex flex-wrap">
						<Icon name="ph:tag" size={22} class="mr-3 mt-1" />
						{post.data.tags?.map((tag: string) => (
							<Tag tag={tag} size="sm" />
						))}
					</div>
					<p class="mt-6">
						{post.data.description}{" "}
						<a
							href={`/${post.collection || collectionName}/${post.slug}`}
							class="text-theme-primary pl-2"
						>
							Read more...
						</a>
					</p>
					<p>{post.data.pubDatetime?.toDateString()}</p>
					<p>By {post.data.author}</p>
				</div>
			))
		}
{SITE.postsPerPage < page?.total &&
		<Pagination page={page} />
}
	</section>
</Layout>
