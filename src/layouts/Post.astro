---
import { COLLECTION_NAMES_LIST, AUTHORS } from "@config";

import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";

import Layout from "@layouts/Layout.astro";
import Tags from "@components/Astro/Tags.astro";
import Author from "@components/Astro/utils/Author.astro";

import placeholderImage from "@assets/placehold.jpg";

export interface Props {
	collectionName: (typeof COLLECTION_NAMES_LIST)[number] | string | undefined;
	slug: string;
	tags: string[] | undefined;
	class?: string | Record<string, boolean>;
}

const { class: className, collectionName, slug } = Astro.props;

const entry = collectionName
	? // @ts-ignore
		(await getCollection(collectionName)).find((entry) => entry.slug === slug)
	: undefined;

if (!entry) {
	return new Response(null, {
		status: 404,
		statusText: "Not found",
	});
}

const { Content } = await entry.render();
---

<Layout
	title={entry.data.title}
	description={entry.data.description}
	logoSrc={""}
>
	<section>
		{entry.data.subtitle && <p class="h2 md:mx-14">{entry.data.subtitle}</p>}
		<article class:list={["prose", className]}>
			Posted by <Author
				authorId={entry.data.author}
				pubDateTime={entry.data.pubDatetime}
			/>
			{
				entry.data.tags && (
					<span class="flex items-baseline mt-3">
						<Tags tags={entry.data.tags} />
					</span>
				)
			}
			<Image
				src={entry.data.image || placeholderImage}
				alt={entry.data.alt || entry.data.title}
				class="w-full h-auto max-h-50vh object-cover"
				width={1200}
				height={630}
			/>
			<Content />
		</article>
	</section>
</Layout>
