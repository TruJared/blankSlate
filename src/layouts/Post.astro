---
import {COLLECTION_NAMES_LIST, AUTHORS } from "@config";


import { getCollection } from "astro:content";
import { Icon } from "astro-icon/components";

import Layout from "@layouts/Layout.astro";
import Tags from "@components/Astro/Tags.astro";

export interface Props {
	collectionName: typeof COLLECTION_NAMES_LIST[number];
	slug: string;
	tags: string[] | undefined;
	customClass?: string | Array<{ [key: string]: boolean | string }>;
}

const { collectionName, slug, customClass } = Astro.props;

const entry = (await getCollection(collectionName)).find(
	(entry) => entry.slug === slug
);

if (!entry) {
	return new Response(null, {
		status: 404,
		statusText: "Not found",
	});
}

const { Content } = await entry.render();
---

<Layout
	title={entry.data.title}
	description={entry.data.description}
	logoSrc={""}
>
	<article class:list={["prose", customClass]}>
		{entry.data.subtitle && <h2>{entry.data.subtitle}</h2>}
		<span class="flex row items-center">
			<Icon
				name="ph:pencil-simple-line"
				class="text-theme-primary inline -mt-6"
			/>
			<p class="text-sm text-theme-primary font-mono">
				Posted by {AUTHORS.find(author => author.id === entry.data.author)?.name}
				{
					entry.data.pubDatetime
						? `on ${entry.data.pubDatetime.toDateString()}`
						: ""
				}
			</p>
		</span>
		{
			entry.data.tags && <Tags tags={entry.data.tags} />
		}
		<Content />
	</article>
</Layout>
