---
import { COLLECTION_NAMES_LIST } from "@config";


import { getCollection } from "astro:content";
import { Icon } from "astro-icon/components";

import Layout from "@layouts/Layout.astro";
import Tag from "@components/Astro/Tag.astro";

export interface Props {
	collectionName: typeof COLLECTION_NAMES_LIST[number];
	slug: string;
	tags: string[] | undefined;
	customClass?: string | Array<{ [key: string]: boolean | string }>;
}

const { collectionName, slug, customClass } = Astro.props;

const entry = (await getCollection(collectionName)).find(
	(entry) => entry.slug === slug
);

if (!entry) {
	return new Response(null, {
		status: 404,
		statusText: "Not found",
	});
}

const { Content } = await entry.render();
---

<Layout
	title={entry.data.title}
	description={entry.data.description}
	logoSrc={""}
	customClass={customClass}
>
	<article>
		{entry.data.subtitle && <h2>{entry.data.subtitle}</h2>}
		<span class="flex row items-center mt-2">
			<Icon
				name="ph:pencil-simple-line"
				class="text-theme-primary inline mr-2"
			/>
			<p class="text-sm text-theme-primaryfont-mono">
				Posted by {entry.data.author}
				{
					entry.data.pubDatetime
						? `on ${entry.data.pubDatetime.toDateString()}`
						: ""
				}
			</p>
		</span>
		{
			entry.data.tags && (
				<div class="flex flex-wrap">
					{entry.data.tags.map((tag: string) => (
						<Tag tag={tag} size="sm" />
					))}
				</div>
			)
		}
		<Content />
	</article>
</Layout>
